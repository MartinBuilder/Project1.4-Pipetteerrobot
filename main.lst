CCS PCM C Compiler, Version 4.099, 50534               06-jun-23 12:37

               Filename: E:\Project1.4-Pipetteerrobot\main.lst

               ROM used: 131 words (2%)
                         Largest free fragment is 2048
               RAM used: 17 (5%) at main() level
                         17 (5%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   06C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.2
001C:  GOTO   01F
001D:  BTFSC  0C.2
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   035
.................... //prepping 
....................  
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #use delay(clock=8867238) 
.................... #fuses HS,NOWDT 
.................... int outs = 1;  //preset to start process 
*
0075:  MOVLW  01
0076:  BCF    03.5
0077:  MOVWF  28
.................... long delay ; 
.................... #int_CCP1 
.................... TCCP1_isr() 
.................... { 
....................    CCP_1 = CCP_1 + 44336;      //increment compare counter 8.867238Mhz/4  =  2.2168095 Mhz 
*
0035:  MOVLW  30
0036:  ADDWF  15,F
0037:  MOVLW  AD
0038:  BTFSC  03.0
0039:  MOVLW  AE
003A:  ADDWF  16,F
....................  // tijd per puls is 1 / 2216809  = 0,45 microsec  (   44336 * 0,45 microsec = 20 milliseconden 
....................    output_bit(PIN_D0, 1);  //output bit to pin 
003B:  BSF    08.0
003C:  BSF    03.5
003D:  BCF    08.0
....................    output_bit(PIN_D1, 1);  //output bit to pin 
003E:  BCF    03.5
003F:  BSF    08.1
0040:  BSF    03.5
0041:  BCF    08.1
....................    for (delay = 0; delay <361; delay++); // 361 voor onder pomp - 230 voor startpositie 
0042:  BCF    03.5
0043:  CLRF   2A
0044:  CLRF   29
0045:  MOVF   2A,W
0046:  SUBLW  01
0047:  BTFSS  03.0
0048:  GOTO   053
0049:  BTFSS  03.2
004A:  GOTO   04F
004B:  MOVF   29,W
004C:  SUBLW  68
004D:  BTFSS  03.0
004E:  GOTO   053
004F:  INCF   29,F
0050:  BTFSC  03.2
0051:  INCF   2A,F
0052:  GOTO   045
....................     output_bit(PIN_D0,0);   
0053:  BCF    08.0
0054:  BSF    03.5
0055:  BCF    08.0
....................    for (delay = 0; delay <100; delay++); 
0056:  BCF    03.5
0057:  CLRF   2A
0058:  CLRF   29
0059:  MOVF   2A,F
005A:  BTFSS  03.2
005B:  GOTO   064
005C:  MOVF   29,W
005D:  SUBLW  63
005E:  BTFSS  03.0
005F:  GOTO   064
0060:  INCF   29,F
0061:  BTFSC  03.2
0062:  INCF   2A,F
0063:  GOTO   059
....................     output_bit(PIN_D1,0); 
0064:  BCF    08.1
0065:  BSF    03.5
0066:  BCF    08.1
.................... } 
....................  
....................  
0067:  BCF    03.5
0068:  BCF    0C.2
0069:  BCF    0A.3
006A:  BCF    0A.4
006B:  GOTO   01F
.................... void main() 
.................... { 
006C:  CLRF   04
006D:  BCF    03.7
006E:  MOVLW  1F
006F:  ANDWF  03,F
0070:  BSF    03.5
0071:  BSF    1F.0
0072:  BSF    1F.1
0073:  BSF    1F.2
0074:  BCF    1F.3
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); //timer1 enabled, instruction clock / 1 
*
0078:  MOVLW  85
0079:  MOVWF  10
....................    setup_ccp1(CCP_COMPARE_INT); //set CCP1 to cause an interrupt on match 
007A:  MOVLW  0A
007B:  MOVWF  17
....................    enable_interrupts(INT_CCP1);  //unmask Timer2 match interrupt 
007C:  BSF    03.5
007D:  BSF    0C.2
....................    enable_interrupts(global);    //enabled all unmasked interrupts 
007E:  MOVLW  C0
007F:  BCF    03.5
0080:  IORWF  0B,F
....................    while(1);     //main does nothing 
0081:  GOTO   081
....................  
.................... } 
....................  
0082:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
