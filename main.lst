CCS PCM C Compiler, Version 5.115d, 1               02-Jun-23 13:05
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\marti\Documents\CCS\Project1.4-Pipetteerrobot\main.lst

               ROM used:   90 words (1%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           11 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=8867238)
.................... 
.................... 
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay(clock=8867238)
0004:  MOVLW  25
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  DF
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #fuses HS,NOWDT
.................... int outs = 1;  //preset to start process
.................... long delay;
.................... 
.................... void main()
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  01
001D:  MOVWF  20
001E:  MOVLW  FF
001F:  MOVWF  23
0020:  BSF    03.5
0021:  BSF    1F.0
0022:  BSF    1F.1
0023:  BSF    1F.2
0024:  BCF    1F.3
0025:  MOVLW  07
0026:  MOVWF  1C
0027:  BCF    03.7
.................... {
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); //timer1 enabled, instruction clock / 1
0028:  MOVLW  85
0029:  BCF    03.5
002A:  MOVWF  10
....................    setup_ccp1(CCP_COMPARE_INT); //set CCP1 to cause an interrupt on match
002B:  MOVLW  0A
002C:  MOVWF  17
....................    enable_interrupts(INT_CCP1);  //unmask Timer2 match interrupt
002D:  BSF    03.5
002E:  BSF    0C.2
....................    enable_interrupts(global);    //enabled all unmasked interrupts
002F:  MOVLW  C0
0030:  BCF    03.5
0031:  IORWF  0B,F
....................    
....................    while(TRUE)
....................    {
....................       delay_ms(2000);
0032:  MOVLW  08
0033:  MOVWF  24
0034:  MOVLW  FA
0035:  MOVWF  25
0036:  CALL   004
0037:  DECFSZ 24,F
0038:  GOTO   034
....................       output_bit( PIN_C2, 0);     
0039:  BCF    07.2
003A:  BCF    23.2
003B:  MOVF   23,W
003C:  BSF    03.5
003D:  MOVWF  07
....................       output_bit( PIN_C3, 0);
003E:  BCF    03.5
003F:  BCF    07.3
0040:  BCF    23.3
0041:  MOVF   23,W
0042:  BSF    03.5
0043:  MOVWF  07
....................       delay_ms(2000);
0044:  MOVLW  08
0045:  BCF    03.5
0046:  MOVWF  24
0047:  MOVLW  FA
0048:  MOVWF  25
0049:  CALL   004
004A:  DECFSZ 24,F
004B:  GOTO   047
....................       output_bit( PIN_C2, 1);     
004C:  BSF    07.2
004D:  BCF    23.2
004E:  MOVF   23,W
004F:  BSF    03.5
0050:  MOVWF  07
....................       output_bit( PIN_C3, 1);
0051:  BCF    03.5
0052:  BSF    07.3
0053:  BCF    23.3
0054:  MOVF   23,W
0055:  BSF    03.5
0056:  MOVWF  07
0057:  BCF    03.5
0058:  GOTO   032
....................    }
.................... 
.................... }
0059:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
