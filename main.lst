CCS PCM C Compiler, Version 5.115d, 1               07-Jun-23 20:49
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\Thijs\Desktop\project-1-4\Project1.4-Pipetteerrobot\main.lst

               ROM used:   206 words (3%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   070
0003:  NOP
.................... #include <16F877.h>
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... #use delay(clock=8000000)
*
000F:  MOVLW  22
0010:  MOVWF  04
0011:  BCF    03.7
0012:  MOVF   00,W
0013:  BTFSC  03.2
0014:  GOTO   022
0015:  MOVLW  02
0016:  MOVWF  78
0017:  CLRF   77
0018:  DECFSZ 77,F
0019:  GOTO   018
001A:  DECFSZ 78,F
001B:  GOTO   017
001C:  MOVLW  97
001D:  MOVWF  77
001E:  DECFSZ 77,F
001F:  GOTO   01E
0020:  DECFSZ 00,F
0021:  GOTO   015
0022:  RETURN
.................... #fuses HS,NOWDT
.................... 
.................... void motor1R(){
....................    output_bit( PIN_B5, 0);
*
0004:  BCF    06.5
0005:  BSF    03.5
0006:  BCF    06.5
....................    output_bit( PIN_B4, 1);//motor 1 Rechtsom
0007:  BCF    03.5
0008:  BSF    06.4
0009:  BSF    03.5
000A:  BCF    06.4
000B:  BCF    03.5
000C:  BCF    0A.3
000D:  BCF    0A.4
000E:  GOTO   07D (RETURN)
.................... }
.................... 
.................... void motor1uit(){
....................    output_bit( PIN_B5, 0);
*
0023:  BCF    06.5
0024:  BSF    03.5
0025:  BCF    06.5
....................    output_bit( PIN_B4, 0);// motor 1 stoppen
0026:  BCF    03.5
0027:  BCF    06.4
0028:  BSF    03.5
0029:  BCF    06.4
002A:  BCF    03.5
002B:  RETURN
.................... }
.................... 
.................... void motor1L(){
....................    output_bit( PIN_B4, 0);
002C:  BCF    06.4
002D:  BSF    03.5
002E:  BCF    06.4
....................    output_bit( PIN_B5, 1);//motor 1 Linksom
002F:  BCF    03.5
0030:  BSF    06.5
0031:  BSF    03.5
0032:  BCF    06.5
0033:  BCF    03.5
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   08D (RETURN)
.................... }
.................... 
.................... void motor2R(){
....................    output_bit( PIN_C5, 0);
0037:  BCF    07.5
0038:  BCF    20.5
0039:  MOVF   20,W
003A:  BSF    03.5
003B:  MOVWF  07
....................    output_bit( PIN_C4, 1);//motor 2 Rechtsom
003C:  BCF    03.5
003D:  BSF    07.4
003E:  BCF    20.4
003F:  MOVF   20,W
0040:  BSF    03.5
0041:  MOVWF  07
0042:  BCF    03.5
0043:  BCF    0A.3
0044:  BCF    0A.4
0045:  GOTO   09D (RETURN)
.................... }
.................... 
.................... void motor2uit(){
....................    output_bit( PIN_C4, 0);
0046:  BCF    07.4
0047:  BCF    20.4
0048:  MOVF   20,W
0049:  BSF    03.5
004A:  MOVWF  07
....................    output_bit( PIN_C5, 0);//motor 1 stoppen
004B:  BCF    03.5
004C:  BCF    07.5
004D:  BCF    20.5
004E:  MOVF   20,W
004F:  BSF    03.5
0050:  MOVWF  07
0051:  BCF    03.5
0052:  RETURN
.................... }
.................... 
.................... void motor2L(){
....................    output_bit( PIN_C4, 0);
0053:  BCF    07.4
0054:  BCF    20.4
0055:  MOVF   20,W
0056:  BSF    03.5
0057:  MOVWF  07
....................    output_bit( PIN_C5, 1);//motor 2 Linksom
0058:  BCF    03.5
0059:  BSF    07.5
005A:  BCF    20.5
005B:  MOVF   20,W
005C:  BSF    03.5
005D:  MOVWF  07
005E:  BCF    03.5
005F:  BCF    0A.3
0060:  BCF    0A.4
0061:  GOTO   0AD (RETURN)
.................... }  
.................... 
.................... void hydrauliekAan(){
....................    output_bit( PIN_A4, 1);//hydraulish systeem aan
0062:  BSF    05.4
0063:  BSF    03.5
0064:  BCF    05.4
0065:  BCF    03.5
0066:  BCF    0A.3
0067:  BCF    0A.4
0068:  GOTO   0BD (RETURN)
.................... }
.................... 
.................... void hydrauliekUit(){
....................    output_bit( PIN_A5, 0);//hydraulish systeem stoppen
0069:  BCF    05.5
006A:  BSF    03.5
006B:  BCF    05.5
006C:  BCF    03.5
006D:  BCF    0A.3
006E:  BCF    0A.4
006F:  GOTO   0C5 (RETURN)
.................... }
.................... 
.................... void main(){
0070:  MOVF   03,W
0071:  ANDLW  1F
0072:  MOVWF  03
0073:  MOVLW  FF
0074:  MOVWF  20
0075:  BSF    03.5
0076:  BSF    1F.0
0077:  BSF    1F.1
0078:  BSF    1F.2
0079:  BCF    1F.3
007A:  BCF    03.7
....................    while(1){
....................       motor1R ();
007B:  BCF    03.5
007C:  GOTO   004
....................       delay_ms(2000);
007D:  MOVLW  08
007E:  MOVWF  21
007F:  MOVLW  FA
0080:  MOVWF  22
0081:  CALL   00F
0082:  DECFSZ 21,F
0083:  GOTO   07F
....................       motor1uit();
0084:  CALL   023
....................       delay_ms(1000);     
0085:  MOVLW  04
0086:  MOVWF  21
0087:  MOVLW  FA
0088:  MOVWF  22
0089:  CALL   00F
008A:  DECFSZ 21,F
008B:  GOTO   087
....................          
....................       motor1L ();
008C:  GOTO   02C
....................       delay_ms(2000);
008D:  MOVLW  08
008E:  MOVWF  21
008F:  MOVLW  FA
0090:  MOVWF  22
0091:  CALL   00F
0092:  DECFSZ 21,F
0093:  GOTO   08F
....................       motor1uit();
0094:  CALL   023
....................       delay_ms(1000);  
0095:  MOVLW  04
0096:  MOVWF  21
0097:  MOVLW  FA
0098:  MOVWF  22
0099:  CALL   00F
009A:  DECFSZ 21,F
009B:  GOTO   097
....................       
....................       motor2R ();
009C:  GOTO   037
....................       delay_ms(2000);
009D:  MOVLW  08
009E:  MOVWF  21
009F:  MOVLW  FA
00A0:  MOVWF  22
00A1:  CALL   00F
00A2:  DECFSZ 21,F
00A3:  GOTO   09F
....................       motor2uit();
00A4:  CALL   046
....................       delay_ms(1000);    
00A5:  MOVLW  04
00A6:  MOVWF  21
00A7:  MOVLW  FA
00A8:  MOVWF  22
00A9:  CALL   00F
00AA:  DECFSZ 21,F
00AB:  GOTO   0A7
....................          
....................       motor2L ();
00AC:  GOTO   053
....................       delay_ms(2000);
00AD:  MOVLW  08
00AE:  MOVWF  21
00AF:  MOVLW  FA
00B0:  MOVWF  22
00B1:  CALL   00F
00B2:  DECFSZ 21,F
00B3:  GOTO   0AF
....................       motor2uit();
00B4:  CALL   046
....................       delay_ms(1000);
00B5:  MOVLW  04
00B6:  MOVWF  21
00B7:  MOVLW  FA
00B8:  MOVWF  22
00B9:  CALL   00F
00BA:  DECFSZ 21,F
00BB:  GOTO   0B7
....................       
....................       hydrauliekAan();
00BC:  GOTO   062
....................       delay_ms(2000);
00BD:  MOVLW  08
00BE:  MOVWF  21
00BF:  MOVLW  FA
00C0:  MOVWF  22
00C1:  CALL   00F
00C2:  DECFSZ 21,F
00C3:  GOTO   0BF
....................       hydrauliekUit();
00C4:  GOTO   069
....................       delay_ms(1000);
00C5:  MOVLW  04
00C6:  MOVWF  21
00C7:  MOVLW  FA
00C8:  MOVWF  22
00C9:  CALL   00F
00CA:  DECFSZ 21,F
00CB:  GOTO   0C7
00CC:  GOTO   07C
....................    }
.................... }
00CD:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
